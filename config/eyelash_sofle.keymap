#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&mt {
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
        lhm: left_home_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HOME_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <600>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <300>;
            bindings = <&kp>, <&kp>;

            flavor = "hold-preferred";
            hold-trigger-key-positions = <6 7 8 9 10 11 12 19 20 21 22 23 24 25 32 33 34 35 36 37 38 45 46 47 48 49 50 51 58 59 60 61 62 63>;
            hold-trigger-on-release;
        };

        rhm: right_home_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HOME_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <600>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <300>;
            bindings = <&kp>, <&kp>;

            flavor = "hold-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 6 13 14 15 16 17 18 19 26 27 28 29 30 31 32 39 40 41 42 43 44 45 52 53 54 55 56 57>;
            hold-trigger-on-release;
        };

        dance_mod_j: dance_mod_j {
            compatible = "zmk,behavior-tap-dance";
            label = "DANCE_MOD_J";
            #binding-cells = <0>;
            bindings = <&rhm RIGHT_CONTROL J>, <&kp J>;
        };

        dance_mod_k: dance_mod_k {
            compatible = "zmk,behavior-tap-dance";
            label = "DANCE_MOD_K";
            #binding-cells = <0>;
            bindings = <&rhm RSHFT K>, <&kp K>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC           &kp N1        &kp N2           &kp N3             &kp N4               &kp N5       &kp UP_ARROW     &kp N6         &kp N7        &kp N8        &kp N9            &kp N0                    &kp MINUS
&kp GRAVE         &kp Q         &kp W            &kp E              &kp R                &kp T        &kp DOWN_ARROW   &kp Y          &kp U         &kp I         &kp O             &kp P                     &kp EQUAL
&kp LEFT_SHIFT    &lhm LGUI A   &lhm LEFT_ALT S  &lhm LEFT_SHIFT D  &lhm LEFT_CONTROL F  &kp G        &kp LEFT_ARROW   &kp H          &dance_mod_j  &dance_mod_k  &rhm RIGHT_ALT L  &rhm RIGHT_GUI SEMICOLON  &kp APOS
&kp LEFT_CONTROL  &kp Z         &kp X            &kp C              &kp V                &kp B        &kp RIGHT_ARROW  &kp N          &kp M         &kp COMMA     &kp DOT           &kp SLASH                 &kp RIGHT_SHIFT
&kp C_MUTE        &kp LEFT_GUI  &kp LEFT_ALT     &mo 1              &kp TAB              &kp SPACE    &kp ENTER        &kp BACKSPACE  &kp ENTER     &mo 2         &kp RIGHT_ALT     &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&trans      &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8       &kp F9     &kp F10           &kp F11
&trans      &trans           &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp HOME         &kp PAGE_DOWN    &kp PAGE_UP  &kp END    &kp BACKSLASH     &kp F12
&trans      &trans           &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp LEFT         &kp DOWN         &kp UP       &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &trans       &kp INS    &kp LEFT_BRACE    &kp RIGHT_BRACE
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans       &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5    &mmv MOVE_UP     &kp KP_NUMBER_6  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0  &kp KP_DIVIDE
&trans  &bt BT_CLR       &bt BT_CLR_ALL   &trans           &trans           &trans             &mmv MOVE_DOWN   &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &kp KP_MULTIPLY
&trans  &out OUT_USB     &out OUT_BLE     &trans           &trans           &trans             &mmv MOVE_LEFT   &trans           &trans           &trans           &trans           &kp LBRC         &kp KP_MINUS
&trans  &sys_reset       &trans           &bootloader      &trans           &trans             &mmv MOVE_RIGHT  &trans           &trans           &sys_reset       &soft_off        &kp KP_DOT       &kp KP_PLUS
&trans  &trans           &trans           &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
